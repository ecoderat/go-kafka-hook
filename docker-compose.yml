version: '3'
services:
  app:
    container_name: full_app
    build: .
    ports: 
      - 4000:4000 
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - db
      - zookeeper
      - kafka          
    networks:
      - fullstack

  db:
    image: postgres
    container_name: kartaca-postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST} 
    ports:
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - fullstack
      
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - fullstack

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
        - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://172.17.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - fullstack
    volumes:
      - kafka-data:/var/lib/kafka

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  api:
  database_postgres:
  grafana-data:
  kafka-data:         

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge
